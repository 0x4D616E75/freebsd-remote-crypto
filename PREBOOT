[ -z "$ufsdir" ] && ufsdir=/xboot
[ -z "$pool" ]   && pool=tank

if [ x"$1" != x"update" -a x"$1" != x"setup" ] ; then
	echo "ERROR: run me with setup or update"
	exit 1
fi

if [ "$1" = "setup" ] ; then
	src=${3-/}
	dst=${2-/xboot}
fi

if [ "$1" = "update" ] ; then
	src=${3-/}
	dst=${2-/xboot}
fi

if [ ! -d $src ] ; then 
	echo "Source dir $src does not exist" >&2
	exit 
fi

if [ ! -d $dst ] ; then 
	echo "Destination dir $dst does not exist" >&2
	exit 
fi

if [ x"$dst" = x"$src" ] ; then 
	echo "srcdir and dstdir may not be equal" >&2
	exit 
fi
tar -C $src -cf - bin sbin lib libexec rescue | tar -C $dst -xf - 

mkdir -p $dst/usr/share/misc
mkdir -p $dst/usr/local/etc
ln -fs /tmp $dst/usr/local/etc/dropbear
ln -fs /etc/termcap $dst/usr/share/misc/termcap

mkdir -p -m 1777 $dst/tmp
mkdir -p $dst/var
mkdir -p $dst/dev
mkdir -p $dst/var/empty
ln -fs /tmp $dst/var/db
ln -fs /tmp $dst/var/run
ln -fs /tmp $dst/var/tmp

mkdir -p $dst/root
mkdir -p /etc

for a in  \
./etc/ntp \
./etc/hosts \
./etc/dhclient.conf \
./etc/termcap.small \
./etc/netconfig \
./etc/protocols \
./etc/devfs.conf \
./etc/devd \
./etc/devd/asus.conf \
./etc/devd/uath.conf \
./etc/devd/usb.conf \
./etc/devd.conf \
./etc/rc.d \
./etc/rc.d/netif \
./etc/rc.d/dhclient \
./etc/rc.d/routing \
./etc/opieaccess \
./etc/pam.d \
./etc/pam.d/sshd \
./etc/pam.d/system \
./etc/pam.d/passwd \
./etc/pam.d/login \
./etc/services \
./etc/mac.conf \
./etc/pccard_ether \
./etc/libmap32.conf \
./etc/login.access \
./etc/nsswitch.conf \
./etc/netstart \
./etc/shells \
./etc/libalias.conf \
./etc/rc.shutdown \
./etc/hosts.allow \
./etc/ftpusers \
./etc/gettytab \
./etc/sysctl.conf \
./etc/rc.subr \
./etc/locate.rc \
./etc/rpc \
./etc/defaults \
./etc/defaults/devfs.rules \
./etc/defaults/rc.conf \
./etc/group \
./etc/dumpdates \
./etc/ssh \
./etc/networks \
./etc/profile \
./etc/ttys \
./etc/libmap.conf \
./etc/login.conf.db \
./etc/regdomain.xml \
./etc/zfs \
./etc/hosts.equiv \
./etc/login.conf \
./etc/network.subr \
./etc/resolv.conf \
./etc/rc.conf \
; do
if [ -d $src/$a ] ; then
	mkdir -p $dst/$a
else
	[ -f $src/$a ] && cp $src/$a $dst/`dirname $a`
fi
done
ln -fs /etc/termcap.small $dst/etc/termcap

[ -f $dst/root/.profile ] || echo 'PATH=${PATH}:/bin:/sbin:/rescue:/usr/bin:/usr/sbin' > $dst/root/.profile

cat <<EOM > $dst/root/DWIM
PATH=${PATH}:/bin:/sbin:/rescue
set -ex
fsck -p
geli attach gpt/zroot0
geli attach gpt/zroot1
kenv vfs.root.mountfrom="zfs:$pool/root"
reboot -r

#OLD way:
#zfs mount -a
#mount -t devfs none /dev
#mount /dev/mirror/boot $ufsdir
exit
EOM

tmpbase=/tmp/mnt
cat <<EOM > $dst/root/FIX
PATH=${PATH}:/bin:/sbin:/rescue
fsck -p
geli attach gpt/zroot0
geli attach gpt/zroot1
kenv vfs.root.mountfrom="zfs:$pool/root"
mkdir $tmpbase || true
zpool import -o altroot=$tmpbase -o cachefile=/tmp/zpool.cache $pool
echo "Mounted @ $tmpbase"
echo 'Use "reboot -r" when done.'
EOM


#for fsck -p
[ -f $dst/etc/fstab ] || echo "/dev/mirror/boot / ufs rw 1 1" >$dst/etc/fstab

if [ "$1" = "setup" ] ; then

	if [ ! -f $src/etc/ssh/ssh_host_dsa_key ] ; then
		chroot $src /etc/rc.d/sshd onekeygen
	fi

	grep -E "^(root|nobody):" $src/etc/master.passwd |sed 's!/bin/csh!/bin/sh!'> $dst/etc/master.passwd

cat << 'EOM' > $dst/etc/rc
#!/bin/sh
#

stty status '^T' 2> /dev/null
trap : 2
trap "echo 'Boot interrupted'; exit 1" 3
HOME=/
PATH=/sbin:/bin:/usr/sbin:/usr/bin
export HOME PATH

. /etc/rc.subr
load_rc_config 'XXX'

trap "_rc_conf_loaded=false; load_rc_config 'XXX'" ALRM

PORT=22

# To get dhclient working
synchronous_dhclient="YES"
export synchronous_dhclient
mdmfs -s16m -p 1777 -S md /tmp

# perhaps ipfw deny all except tcp/22 and icmp/echo
run_rc_script /etc/rc.d/netif start
run_rc_script /etc/rc.d/routing start
echo "Waiting for sshd to exit or press ^C ..."
/sbin/dropbear -E -F -p $PORT -r /etc/dropbear_host_key -R
echo " done!"
run_rc_script /etc/rc.d/routing stop
run_rc_script /etc/rc.d/netif stop

if [ -f /PREBOOT ] ; then
	echo "Running fallback /bin/sh"
	cd /root
	/bin/sh
fi

umount /tmp
echo 'Running real /etc/rc to go multiuser'
# remove "autoboot" because fsck might not work anymore here.
exec /bin/sh /etc/rc
EOM

# END OF SETUP
else

# update root password
(grep '^root:' $src/etc/master.passwd; grep -v '^root:' $dst/etc/master.passwd ) |sed 's!/bin/csh!/bin/sh!'> $dst/etc/master.passwd

fi

(
uname -v | sed -e 's,^\([^#]*\) #\(.* [1-2][0-9][0-9][0-9]\).*/\([^\]*\) $,\1 (\3) #\2,'
echo ""
echo "PREBOOT MAINTENANCE MODE"
echo ""
echo 'run "sh DWIM" to unlock disk'
echo 'run "killall dropbear" instead to continue boot'
echo ""
)> $dst/etc/motd

if [ ! -f $src/usr/local/sbin/dropbear ] ; then
	cp $src/etc/hosts $src/etc/hosts.org
	echo $(host -4 -t A pkg.freebsd.org | awk '/has address/ { print $4 }') pkg.freebsd.org >> /mnt/etc/hosts
	LANG= ASSUME_ALWAYS_YES=yes chroot /mnt pkg install dropbear
	LANG= ASSUME_ALWAYS_YES=yes chroot /mnt pkg lock -y dropbear
	cp $src/etc/hosts.org $src/etc/hosts
	rm $src/etc/hosts.org
fi

#produces error message bad key type 90
#$src/usr/local/bin/dropbearconvert openssh dropbear $src/etc/ssh/ssh_host_ecdsa_key $dst/etc/dropbear_host_key
$src/usr/local/bin/dropbearconvert openssh dropbear $src/etc/ssh/ssh_host_rsa_key $dst/etc/dropbear_host_key
cp $src/usr/local/sbin/dropbear $dst/sbin/
pwd_mkdb -p -d $dst/etc $dst/etc/master.passwd

echo ""
echo "DON'T FORGET TO SET A ROOT PASSWORD"
echo ""
LANG= ASSUME_ALWAYS_YES=yes chroot /mnt passwd

mkdir -p $dst/root/.ssh
chmod 700 $dst/root/.ssh
touch $dst/root/.ssh/authorized_keys
chmod 600 $dst/root/.ssh/authorized_keys
echo ""
echo "DON'T FORGET TO COPY YOUR RSA SSH PUBLIC KEY TO $dst/root/.ssh/authorized_keys"
echo ""
touch $dst/PREBOOT
